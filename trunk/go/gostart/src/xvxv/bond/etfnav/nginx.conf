
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;	
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;


    client_header_buffer_size 32k; 
    client_max_body_size 8m; 
    client_body_buffer_size 128k; 
 
    sendfile        on; 
    tcp_nopush     on; 
    keepalive_timeout  65;

    gzip  on; 
    gzip_types       text/javascript text/plain text/css application/xml application/x-javascript;
    gzip_disable     "MSIE [1-6]\.(?!.*SV1)"; 


    proxy_connect_timeout 300; 
    proxy_send_timeout 300; 
    proxy_read_timeout 300; 
 
    proxy_set_header X-Forwarded-For $remote_addr; 
    proxy_set_header Connection Close; 
    server_names_hash_max_size 1024; 
    server_names_hash_bucket_size 1024; 
 
    # Default cache parameters for use by virtual hosts 
    # Set the cache path to tmpfs mounted disk, and the zone name 
    # Set the maximum size of the on disk cache to less than the tmpfs file system size 
    proxy_cache_path  ./cache  levels=1:2  keys_zone=pscms:100m max_size=800m; 
    proxy_temp_path   ./proxy; 


    upstream web_server { 
	ip_hash; 
        server 127.0.0.1:7080; 
	
    } 
    server {
        listen       28880;
        server_name  im.idbhost.com;

        charset utf-8;

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ { 
            #如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。 
            proxy_next_upstream http_502 http_504 error timeout invalid_header; 
 
            proxy_cache pscms; 
            proxy_cache_valid 200 304 1h;
            proxy_cache_valid 301 302 5m; 
            proxy_cache_valid any 1m; 
            proxy_set_header  Host $host; 
            proxy_set_header  X-Real-IP  $remote_addr; 
            proxy_set_header X-Forwarded-For $remote_addr; 
            proxy_set_header Accept-Encoding "";
            proxy_ignore_headers "Cache-Control" "Expires";
            proxy_pass http://web_server; 
            expires  15m; 
        } 
 
        location / { 
            proxy_set_header Host $http_host; 
            proxy_redirect     off; 
            proxy_pass         http://web_server; 
            proxy_set_header   Host             $host; 
            proxy_set_header   X-Real-IP        $remote_addr; 
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for; 
        } 

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       80;
        server_name  etf.idbhost.com;

        location / {
            proxy_pass http://127.0.0.1:3000/;
        }
    }

    server {
        listen       80;
        server_name  qb3.idbhost.com;

        location / {
            proxy_pass http://127.0.0.1:3000/csop/;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}